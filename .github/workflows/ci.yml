name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  # Backend unit tests using Rust and Cargo for the Tauri application
  backend-tests:
    name: Backend (Rust • Tauri) • Cargo tests
    runs-on: ubuntu-latest

    steps:
      # Check out repository to the runner
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the required Rust toolchain
      - name: Setup Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      # Cache Cargo builds
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri -> target

      # Install required system packages for building Tauri
      - name: Install Tauri system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev

      # Run backend unit tests (Cargo)
      - name: Run backend unit tests
        run: cargo test --manifest-path src-tauri/Cargo.toml

  # Frontend unit tests using Node.js and Vitest
  # This job depends on the backend tests so that any backend-generated artefacts
  # or contracts are validated before running the frontend.
  frontend-tests:
    name: Frontend (Node v${{ matrix.node }}) • Vitest
    runs-on: ubuntu-latest
    needs: backend-tests
    strategy:
      fail-fast: false
      matrix:
        node: [18, 20]

    steps:
      # Check out repository to the runner
      - name: Checkout repository
        uses: actions/checkout@v4

      # Install the required Node.js version
      - name: Setup Node.js ${{ matrix.node }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: npm

      # Install frontend dependencies
      - name: Install dependencies
        run: npm ci

      # Run the frontend unit tests (Vitest)
      - name: Run frontend unit tests
        run: npm run test
        env:
          CI: true